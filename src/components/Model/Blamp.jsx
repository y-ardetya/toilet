/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useEffect } from "react";

export function Blamp(props) {
  const { nodes } = useGLTF("/lampu.glb");
  const ref = useRef();
  useEffect(() => {
    const interval = setInterval(() => {
      ref.current.visible = !ref.current.visible;
    }, 1000);
    return () => clearInterval(interval);
  }, []);

  return (
    <group {...props} dispose={null}>
      <mesh
        name="body"
        geometry={nodes.body.geometry}
        material={nodes.body.material}
        position={[-0.026, 3.147, 0.041]}
        scale={[0.007, 0.008, 0.008]}
      />
      <mesh
        ref={ref}
        name="lamp"
        geometry={nodes.lamp.geometry}
        position={[-0.026, 3.147, 0.041]}
        scale={[0.007, 0.008, 0.008]}
      >
        <meshStandardMaterial
          emissive="red"
          emissiveIntensity={5}
          toneMapped={false}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/lampu.glb");
